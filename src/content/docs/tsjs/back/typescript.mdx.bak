---
title: f) TypeScript
description: 書き方
layout: '../../../layouts/BaseLayout.astro'
---
 <style>{`
        .sl-markdown-content   div.ec-line {
            margin-top: 0 !important;
        }
        .sl-markdown-content  {
           font-size:15px;
        }
        .sl-markdown-content h1 {
           font-size:  27px;
           text-decoration: underline;
           font-weight: bold
        }
        .sl-markdown-content h2 {
           font-weight: normal;
           text-decoration: underline;
           font-size:25px;
        }
        .sl-markdown-content h3 {
           font-size:20px;
           font-weight: normal;
           font-style: italic;
           text-decoration: underline;
        }
        .sl-markdown-content h4 {
           font-size:15px;
           font-weight: normal;
           font-style: italic;           
           text-decoration: underline;
        }
        .sl-markdown-content h5 {
           font-size:12px;
           font-weight: bold;
           font-style: italic;           
           text-decoration: underline;
        }
        .sl-markdown-content th {
           font-size:12px;
        }
        .sl-markdown-content td {
           font-size:12px;
        }
        
 `}</style>

import CodeTitle from '../../../components/CodeTitle';
import TimeStamp from '../../../components/TimeStamp';

<TimeStamp fileUrl={import.meta.url} />

## 前提
- TypeScriptトランスパイルされる必要がある
- トランスパイルのプロセスで型チェックが行われる
  - scriptタグによる読み込みではTypeScriptは動かない
  - インラインスクリプトはグローバルスコープで実行され、モジュール機能が使えない
- モジュールシステムはES6以降の機能で、ファイルスコープを持つ

## 分割代入

```javascript
const printUser = ({ name, age }: { name: string; age: number }) => {
  console.log(`Name: ${name}, Age: ${age}`);
};

const user = { name: 'Bob', age: 30 };
printUser(user);
// 出力: Name: Bob, Age: 30
```
